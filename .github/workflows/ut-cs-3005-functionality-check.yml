name: ut-cs-3005-functionality-check
on: 
  push:
  workflow_call:
jobs:

##########################################################################

  pull-code:
    name: Pull source code
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Upload repository as artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo
          path: .
        
##########################################################################        
# Hello
# Questions 3
# Image File
########################################################################## 
        
  action-data-menu-data-enabled:
    name: ActionData/MenuData enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: action_data_menu_data_unit_tests
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  action-data-menu-data-check:
    name: ActionData, MenuData, PPM::readStream
    runs-on: self-hosted
    needs: [action-data-menu-data-enabled]
    continue-on-error: false
    if: ${{ needs.action-data-menu-data-enabled.outputs.output1 == 'success' }}
    env:
      ASSIGNMENT_NUMBER: 4
    steps:
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
        
##########################################################################        

  ppm-menu-enabled:
    name: PPM Menu enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: ppm_menu
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ppm-menu-check:
    name: PPM Menu
    runs-on: self-hosted
    needs: [ppm-menu-enabled]
    continue-on-error: false
    if: ${{ needs.ppm-menu-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: ppm_menu
      ASSIGNMENT_NUMBER: 5
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 120
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose

##########################################################################        
        
  ppm-operators-enabled:
    name: PPM Operators enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: operator
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ppm-operators-check:
    name: PPM Operators
    runs-on: self-hosted
    needs: [ppm-operators-enabled]
    continue-on-error: false
    if: ${{ needs.ppm-operators-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: operator
      ASSIGNMENT_NUMBER: 6
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 120
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################        
        
  image-filters-enabled:
    name: Image Filters enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: gray-draw
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  image-filters-check:
    name: Image Filters/Drawing
    runs-on: self-hosted
    needs: [image-filters-enabled]
    continue-on-error: false
    if: ${{ needs.image-filters-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: gray-draw
      ASSIGNMENT_NUMBER: 7
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 120
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################  

  number-grid-enabled:
    name: Number Grid enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      ASSIGNMENT: number-grid
    steps:
      - uses: actions/checkout@v3
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  number-grid-check:
    name: Number Grid
    runs-on: self-hosted
    needs: [number-grid-enabled]
    continue-on-error: false
    if: ${{ needs.number-grid-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ppm_menu
      ASSIGNMENT: number-grid
      ASSIGNMENT_NUMBER: 8
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose --timeout 120
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --image-location images --image-link images --verbose
        
##########################################################################   
